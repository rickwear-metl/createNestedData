{"job":{"components":{"1001":{"id":1001,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":192,"y":992,"width":32,"height":32,"inputConnectorIDs":[1054],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 3"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1002":{"id":1002,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":159,"y":-3,"width":32,"height":32,"inputConnectorIDs":[1015],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1056],"outputUnconditionalConnectorIDs":[1018],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create Plain SQS Queue"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\nimport time\n\n#Assign recources to sqs - this gets us our sqs server\nsqs = boto3.resource('sqs')\n\n#We need to wait 60 seconds before creating a queue that has had the same name as a queue we just deleted\ntime.sleep(70)\nqueue_name = 'SQS_PLAIN_SF'\nqueue = sqs.create_queue(QueueName=queue_name,Attributes={'DelaySeconds':'5'})\nprint('Made queue '+queue_name)\n\n#Check the url is right\nprint('Created Standard SQS queue at: '+queue.url)\ntime.sleep(30)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1003":{"id":1003,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":449,"y":-1,"width":32,"height":32,"inputConnectorIDs":[1051],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1060],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get Plain Messages and Delete"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import time\nimport boto3\n\ntime.sleep (10)\n\nsqs = boto3.resource('sqs')\n\nqueue = sqs.get_queue_by_name(QueueName='SQS_PLAIN_SF')\n\n#This shall return the queue URL this should be...\nqueue_url = queue.url\n\n#Get the message within the queue - this should only be the message we sent because we delete at the end\nfor message in queue.receive_messages():\n  print(format(message.body))\n  message.delete\n  \n  #Compare expected answer with the message we had returned\n  expected_answer = 'This is a plain test message being sent to SQS'\n  if expected_answer==message.body:\n    print ('Deleting queue...')\n  else:\n    raise Exception(\"Failure: The message does not match with the one we expected\")\n\n#Delete the queue\nclient = boto3.client('sqs')\nclient.delete_queue(QueueUrl=queue_url)\ntime.sleep(30)\nprint('Plain queue has been deleted successfully!')"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1004":{"id":1004,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":464,"y":304,"width":32,"height":32,"inputConnectorIDs":[1017],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1059],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get GZip Messages and Delete"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import time\nimport boto3\n\ntime.sleep (10)\n\nsqs = boto3.resource('sqs')\n\nqueue = sqs.get_queue_by_name(QueueName='SQS_GZIP_SF')\n\n#This shall return the queue URL this should be...\nqueue_url = queue.url\n\n#Delete the queue\nclient = boto3.client('sqs')\nclient.delete_queue(QueueUrl=queue_url)\ntime.sleep(30)\nprint('Plain queue has been deleted successfully!')"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1005":{"id":1005,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":464,"y":400,"width":32,"height":32,"inputConnectorIDs":[1059],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"GZip Message Failure"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1006":{"id":1006,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":496,"y":704,"width":32,"height":32,"inputConnectorIDs":[1058],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Base64 Message Failure"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1007":{"id":1007,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":624,"y":992,"width":32,"height":32,"inputConnectorIDs":[1057],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Big Message Failure"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1008":{"id":1008,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-159239741,"x":296,"y":1,"width":32,"height":32,"inputConnectorIDs":[1018],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[1051],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS Message Plain"}}}},"visible":true},"2":{"slot":2,"name":"Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eu-west-1"}}}},"visible":true},"3":{"slot":3,"name":"Queue Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS_PLAIN_SF"}}}},"visible":true},"4":{"slot":4,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"This is a plain test message being sent to SQS"}}}},"visible":true},"5":{"slot":5,"name":"Message Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Plain"}}}},"visible":true},"6":{"slot":6,"name":"Message Group Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"7":{"slot":7,"name":"Message Deduplication Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1009":{"id":1009,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":176,"y":304,"width":32,"height":32,"inputConnectorIDs":[1014],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1053],"outputUnconditionalConnectorIDs":[1023],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create GZip SQS Queue"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\nimport time\n\n#Assign recources to sqs - this gets us our sqs server\nsqs = boto3.resource('sqs')\n\n#We need to wait 60 seconds before creating a queue that has had the same name as a queue we just deleted\ntime.sleep(70)\nqueue_name = 'SQS_GZIP_SF'\nqueue = sqs.create_queue(QueueName=queue_name,Attributes={'DelaySeconds':'5'})\nprint('Made queue '+queue_name)\n\n#Check the url is right\nprint('Created Standard SQS queue at: '+queue.url)\ntime.sleep(30)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1010":{"id":1010,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":624,"y":896,"width":32,"height":32,"inputConnectorIDs":[1019],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1057],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get Big Message Messages and Delete"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import time\nimport boto3\n\ntime.sleep (10)\n\nsqs = boto3.resource('sqs')\n\nqueue = sqs.get_queue_by_name(QueueName='SQS_BIG_MESSAGE_SF')\n\n#This shall return the queue URL this should be...\nqueue_url = queue.url\n\n#Get the message within the queue - this should only be the message we sent because we delete at the end\nfor message in queue.receive_messages():\n  print(format(message.body))\n  message.delete\n  \n  #Compare expected answer with the message we had returned\n  expected_answer = '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'\n  if expected_answer==message.body:\n    print ('Deleteing queue...')\n  else:\n    raise Exception(\"Failure: The message does not match with the one we expected\")\n\n#Delete the queue\nclient = boto3.client('sqs')\nclient.delete_queue(QueueUrl=queue_url)\ntime.sleep(30)\nprint('Plain queue has been deleted successfully!')"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1011":{"id":1011,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-159239741,"x":320,"y":608,"width":32,"height":32,"inputConnectorIDs":[1021],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[1020],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS Message Base64"}}}},"visible":true},"2":{"slot":2,"name":"Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eu-west-1"}}}},"visible":true},"3":{"slot":3,"name":"Queue Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS_BASE_64_SF"}}}},"visible":true},"4":{"slot":4,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"This is a plain test message being sent to SQS"}}}},"visible":true},"5":{"slot":5,"name":"Message Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Base64"}}}},"visible":true},"6":{"slot":6,"name":"Message Group Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"7":{"slot":7,"name":"Message Deduplication Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1012":{"id":1012,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-159239741,"x":416,"y":896,"width":32,"height":32,"inputConnectorIDs":[1052],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[1019],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS Message Big Message"}}}},"visible":true},"2":{"slot":2,"name":"Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eu-west-1"}}}},"visible":true},"3":{"slot":3,"name":"Queue Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS_BIG_MESSAGE_SF"}}}},"visible":true},"4":{"slot":4,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"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"}}}},"visible":true},"5":{"slot":5,"name":"Message Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Plain"}}}},"visible":true},"6":{"slot":6,"name":"Message Group Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"7":{"slot":7,"name":"Message Deduplication Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1013":{"id":1013,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-320,"y":480,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[1014,1015,1016,1022],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1043":{"id":1043,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":192,"y":896,"width":32,"height":32,"inputConnectorIDs":[1022],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1054],"outputUnconditionalConnectorIDs":[1052],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create Big Message SQS Queue"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\nimport time\n\n#Assign recources to sqs - this gets us our sqs server\nsqs = boto3.resource('sqs')\n\n#We need to wait 60 seconds before creating a queue that has had the same name as a queue we just deleted\ntime.sleep(70)\nqueue_name = 'SQS_BIG_MESSAGE_SF'\nqueue = sqs.create_queue(QueueName=queue_name,Attributes={'DelaySeconds':'5'})\nprint('Made queue '+queue_name)\n\n#Check the url is right\nprint('Created Standard SQS queue at: '+queue.url)\ntime.sleep(30)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1044":{"id":1044,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":452,"y":91,"width":32,"height":32,"inputConnectorIDs":[1060],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Plain Message Failure"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1045":{"id":1045,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":176,"y":608,"width":32,"height":32,"inputConnectorIDs":[1016],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1055],"outputUnconditionalConnectorIDs":[1021],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create Base64 SQS Queue"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\nimport time\n\n#Assign recources to sqs - this gets us our sqs server\nsqs = boto3.resource('sqs')\n\n#We need to wait 60 seconds before creating a queue that has had the same name as a queue we just deleted\ntime.sleep(70)\nqueue_name = 'SQS_BASE_64_SF'\nqueue = sqs.create_queue(QueueName=queue_name,Attributes={'DelaySeconds':'5'})\nprint('Made queue '+queue_name)\n\n#Check the url is right\nprint('Created Standard SQS queue at: '+queue.url)\ntime.sleep(30)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1046":{"id":1046,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-159239741,"x":320,"y":304,"width":32,"height":32,"inputConnectorIDs":[1023],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[1017],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS Message GZip"}}}},"visible":true},"2":{"slot":2,"name":"Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eu-west-1"}}}},"visible":true},"3":{"slot":3,"name":"Queue Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS_GZIP_SF"}}}},"visible":true},"4":{"slot":4,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"This is a plain test message being sent to SQS"}}}},"visible":true},"5":{"slot":5,"name":"Message Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gzip & Base64"}}}},"visible":true},"6":{"slot":6,"name":"Message Group Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"7":{"slot":7,"name":"Message Deduplication Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1047":{"id":1047,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":496,"y":608,"width":32,"height":32,"inputConnectorIDs":[1020],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1058],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get Base64 Messages and Delete"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import time\nimport boto3\n\ntime.sleep (10)\n\nsqs = boto3.resource('sqs')\n\nqueue = sqs.get_queue_by_name(QueueName='SQS_BASE_64_SF')\n\n#This shall return the queue URL this should be...\nqueue_url = queue.url\n\n#Get the message within the queue - this should only be the message we sent because we delete at the end\nfor message in queue.receive_messages():\n  print(format(message.body))\n  message.delete\n  \n  #Compare expected answer with the message we had returned\n  expected_answer = 'VGhpcyBpcyBhIHBsYWluIHRlc3QgbWVzc2FnZSBiZWluZyBzZW50IHRvIFNRUw=='\n  if expected_answer==message.body:\n    print ('Deleteing queue...')\n  else:\n    raise Exception(\"Failure: The message does not match with the one we expected\")\n\n#Delete the queue\nclient = boto3.client('sqs')\nclient.delete_queue(QueueUrl=queue_url)\ntime.sleep(30)\nprint('Plain queue has been deleted successfully!')"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1048":{"id":1048,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":160,"y":96,"width":32,"height":32,"inputConnectorIDs":[1056],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1049":{"id":1049,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":176,"y":400,"width":32,"height":32,"inputConnectorIDs":[1053],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 1"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1050":{"id":1050,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":176,"y":704,"width":32,"height":32,"inputConnectorIDs":[1055],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 2"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{},"failureConnectors":{"1053":{"id":1053,"sourceID":1009,"targetID":1049},"1054":{"id":1054,"sourceID":1043,"targetID":1001},"1055":{"id":1055,"sourceID":1045,"targetID":1050},"1056":{"id":1056,"sourceID":1002,"targetID":1048},"1057":{"id":1057,"sourceID":1010,"targetID":1007},"1058":{"id":1058,"sourceID":1047,"targetID":1006},"1059":{"id":1059,"sourceID":1004,"targetID":1005},"1060":{"id":1060,"sourceID":1003,"targetID":1044}},"unconditionalConnectors":{"1014":{"id":1014,"sourceID":1013,"targetID":1009},"1015":{"id":1015,"sourceID":1013,"targetID":1002},"1016":{"id":1016,"sourceID":1013,"targetID":1045},"1017":{"id":1017,"sourceID":1046,"targetID":1004},"1018":{"id":1018,"sourceID":1002,"targetID":1008},"1019":{"id":1019,"sourceID":1012,"targetID":1010},"1020":{"id":1020,"sourceID":1011,"targetID":1047},"1021":{"id":1021,"sourceID":1045,"targetID":1011},"1022":{"id":1022,"sourceID":1013,"targetID":1043},"1023":{"id":1023,"sourceID":1009,"targetID":1046},"1051":{"id":1051,"sourceID":1008,"targetID":1003},"1052":{"id":1052,"sourceID":1043,"targetID":1012}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"1039":{"id":1039,"x":101,"y":773,"width":647,"height":186,"text":"Sends a Big message to an SQS queue\n\n**``NOTE``**\n\nIf you want to edit the SQS component you must first run the __Create Big Message SQS Queue__ Python script, this is due to the fact that this queue only exists for as long as this job is running. The message box should be able to take 256kb of data being passed into it","colour":"00ce4f"},"1040":{"id":1040,"x":102,"y":-140,"width":431,"height":194,"text":"Sends a plain message to an SQS queue\n\n**``NOTE``**\n\nIf you want to edit the SQS component you must first run the __Create Plain SQS Queue__ Python script, this is due to the fact that this queue only exists for as long as this job is running","colour":"00ce4f"},"1041":{"id":1041,"x":102,"y":164,"width":467,"height":191,"text":"Sends a Gzip message to an SQS queue\n\n**``NOTE``**\n\nIf you want to edit the SQS component you must first run the __Create Gzip SQS Queue__ Python script, this is due to the fact that this queue only exists for as long as this job is running","colour":"00ce4f"},"1042":{"id":1042,"x":103,"y":463,"width":490,"height":189,"text":"Sends a Base64 message to an SQS queue\n\n**``NOTE``**\n\nIf you want to edit the SQS component you must first run the __Create Base64 SQS Queue__ Python script, this is due to the fact that this queue only exists for as long as this job is running","colour":"00ce4f"}},"variables":{},"grids":{}},"info":{"name":"SQS Message - Run Standard","description":"","type":"ORCHESTRATION","tag":"4e00d428-b985-4551-8eb2-753e017c7b13"}}