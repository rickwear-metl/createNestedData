{"job":{"components":{"964":{"id":964,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-159239741,"x":208,"y":416,"width":32,"height":32,"inputConnectorIDs":[993],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[1000],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS Message Gzip"}}}},"visible":true},"2":{"slot":2,"name":"Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eu-west-1"}}}},"visible":true},"3":{"slot":3,"name":"Queue Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS_FIFO_GZIP_SF.fifo"}}}},"visible":true},"4":{"slot":4,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"This is a Gzip test message being sent to SQS"}}}},"visible":true},"5":{"slot":5,"name":"Message Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gzip & Base64"}}}},"visible":true},"6":{"slot":6,"name":"Message Group Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1"}}}},"visible":true},"7":{"slot":7,"name":"Message Deduplication Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"965":{"id":965,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-159239741,"x":224,"y":720,"width":32,"height":32,"inputConnectorIDs":[1024],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[997],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS Message Base64"}}}},"visible":true},"2":{"slot":2,"name":"Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eu-west-1"}}}},"visible":true},"3":{"slot":3,"name":"Queue Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS_FIFO_BASE_64_SF.fifo"}}}},"visible":true},"4":{"slot":4,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"This is a Base64 test message being sent to SQS"}}}},"visible":true},"5":{"slot":5,"name":"Message Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Base64"}}}},"visible":true},"6":{"slot":6,"name":"Message Group Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1"}}}},"visible":false},"7":{"slot":7,"name":"Message Deduplication Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"966":{"id":966,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":44,"y":107,"width":32,"height":32,"inputConnectorIDs":[992],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1034],"outputUnconditionalConnectorIDs":[995],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create Plain SQS Queue"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\nimport time\n\n#Assign recources to sqs - this gets us our sqs server\nsqs = boto3.resource('sqs')\n\n#We need to wait 60 seconds before creating a queue that has had the same name as a queue we just deleted\ntime.sleep(70)\nqueue_name = 'SQS_PLAIN_FIFO_SF.fifo'\nqueue = sqs.create_queue(QueueName=queue_name,Attributes={'FifoQueue':'true'})\nprint('Made queue '+queue_name)\n\n#Check the url is right\nprint('Created SQS queue at: '+queue.url)\ntime.sleep(30)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"967":{"id":967,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":48,"y":416,"width":32,"height":32,"inputConnectorIDs":[1027],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1037],"outputUnconditionalConnectorIDs":[993],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create Gzip SQS Queue"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\nimport time\n\n#Assign recources to sqs - this gets us our sqs server\nsqs = boto3.resource('sqs')\n\n#We need to wait 60 seconds before creating a queue that has had the same name as a queue we just deleted\ntime.sleep(70)\nqueue_name = 'SQS_FIFO_GZIP_SF.fifo'\nqueue = sqs.create_queue(QueueName=queue_name,Attributes={'FifoQueue':'true'})\nprint('Made queue '+queue_name)\n\n#Check the url is right\nprint('Created SQS queue at: '+queue.url)\ntime.sleep(30)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"968":{"id":968,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":368,"y":416,"width":32,"height":32,"inputConnectorIDs":[1000],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1031],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get Gzip Messages and Delete"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import time\nimport boto3\nimport gzip\n\ntime.sleep (10)\n\nsqs = boto3.resource('sqs')\n\nqueue = sqs.get_queue_by_name(QueueName='SQS_FIFO_GZIP_SF.fifo')\n\n#This shall return the queue URL this should be...\nqueue_url = queue.url\n\n#Get the message within the queue - this should only be the message we sent because we delete at the end\n#for message in queue.receive_messages():\n#  print(format(message.body))\n#  message.delete\n#  #Compare expected answer with the message we had returned\n#  expected_answers = [\n#    'H4sIAAAAAAAA/wvJyCxWAKJEBfeqzAKFktTiEoXc1OLixPRUhaTUzLx0heLUvBKFknyF4MBgAGWagGItAAAA',\n#    'H4sIAAAAAAAAAAvJyCxWAKJEBfeqzAKFktTiEoXc1OLixPRUhaTUzLx0heLUvBKFknyF4MBgAGWagGItAAAA'\n#  ]\n#  if not message.body in expected_answers:\n#    print ('Deleting queue...')\n#  else:\n#    print(\"Wanted:  \", expected_answers)\n#    print(\"Received:\", message.body)\n#    raise Exception(\"Failure: The message does not match with the one we expected\")\n\n#Delete the queue\nclient = boto3.client('sqs')\nclient.delete_queue(QueueUrl=queue_url)\ntime.sleep(30)\nprint('GZip queue has been deleted successfully!')"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"969":{"id":969,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":333,"y":218,"width":32,"height":32,"inputConnectorIDs":[1033],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Plain Message Failure"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"970":{"id":970,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":368,"y":528,"width":32,"height":32,"inputConnectorIDs":[1031],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"GZip Message Failure"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"971":{"id":971,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":64,"y":720,"width":32,"height":32,"inputConnectorIDs":[1025],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1035],"outputUnconditionalConnectorIDs":[1024],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create Base64 SQS Queue"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\nimport time\n\n#Assign recources to sqs - this gets us our sqs server\nsqs = boto3.resource('sqs')\n\n#We need to wait 60 seconds before creating a queue that has had the same name as a queue we just deleted\ntime.sleep(70)\nqueue_name = 'SQS_FIFO_BASE_64_SF.fifo'\nqueue = sqs.create_queue(QueueName=queue_name,Attributes={'FifoQueue':'true'})\nprint('Created SQS queue '+queue_name)\n\n#Check the url is right\nprint('Location: '+queue.url)\ntime.sleep(30)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"972":{"id":972,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":64,"y":1328,"width":32,"height":32,"inputConnectorIDs":[994],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1036],"outputUnconditionalConnectorIDs":[991],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create Long ID SQS Queue"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\nimport time\n\n#Assign recources to sqs - this gets us our sqs server\nsqs = boto3.resource('sqs')\n\n#We need to wait 60 seconds before creating a queue that has had the same name as a queue we just deleted\ntime.sleep(70)\nqueue_name = 'SQS_FIFO_LONG_ID_SF.fifo'\nqueue = sqs.create_queue(QueueName=queue_name,Attributes={'FifoQueue':'true'})\nprint('Created SQS queue '+queue_name)\n\n#Check the url is right\nprint('Location: '+queue.url)\ntime.sleep(30)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"973":{"id":973,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":384,"y":1440,"width":32,"height":32,"inputConnectorIDs":[1032],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Long ID Failure"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"974":{"id":974,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-576,"y":720,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[990,992,994,1025,1027],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"975":{"id":975,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-159239741,"x":190,"y":111,"width":32,"height":32,"inputConnectorIDs":[995],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[1026],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS Message Plain"}}}},"visible":true},"2":{"slot":2,"name":"Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eu-west-1"}}}},"visible":true},"3":{"slot":3,"name":"Queue Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS_PLAIN_FIFO_SF.fifo"}}}},"visible":true},"4":{"slot":4,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"This is a plain test message being sent to SQS"}}}},"visible":true},"5":{"slot":5,"name":"Message Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Plain"}}}},"visible":true},"6":{"slot":6,"name":"Message Group Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1"}}}},"visible":false},"7":{"slot":7,"name":"Message Deduplication Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"976":{"id":976,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":384,"y":832,"width":32,"height":32,"inputConnectorIDs":[1030],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Base64 Message Failure"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"977":{"id":977,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":80,"y":1008,"width":32,"height":32,"inputConnectorIDs":[990],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1029],"outputUnconditionalConnectorIDs":[998],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create Big Message SQS Queue"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\nimport time\n\n#Assign recources to sqs - this gets us our sqs server\nsqs = boto3.resource('sqs')\n\n#We need to wait 60 seconds before creating a queue that has had the same name as a queue we just deleted\ntime.sleep(70)\nqueue_name = 'SQS_FIFO_BIG_MESSAGE_SF.fifo'\nqueue = sqs.create_queue(QueueName=queue_name,Attributes={'FifoQueue':'true'})\nprint('Created SQS queue '+queue_name)\n\n#Check the url is right\nprint('Location: '+queue.url)\ntime.sleep(30)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"978":{"id":978,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":43,"y":230,"width":32,"height":32,"inputConnectorIDs":[1034],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"979":{"id":979,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":560,"y":1008,"width":32,"height":32,"inputConnectorIDs":[999],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1028],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get Big Message and Delete"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import time\nimport boto3\n\ntime.sleep (10)\n\nsqs = boto3.resource('sqs')\n\nqueue = sqs.get_queue_by_name(QueueName='SQS_FIFO_BIG_MESSAGE_SF.fifo')\n\n#This shall return the queue URL this should be...\nqueue_url = queue.url\n\n#Get the message within the queue - this should only be the message we sent because we delete at the end\nfor message in queue.receive_messages():\n  print(format(message.body))\n  message.delete\n  \n  #Compare expected answer with the message we had returned\n  expected_answer = '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'\n  if expected_answer==message.body:\n    print ('Deleteing queue...')\n  else:\n    raise Exception(\"Failure: The message does not match with the one we expected\")\n\n#Delete the queue\nclient = boto3.client('sqs')\nclient.delete_queue(QueueUrl=queue_url)\ntime.sleep(30)\nprint('Long Message queue has been deleted successfully!')"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"980":{"id":980,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-159239741,"x":224,"y":1328,"width":32,"height":32,"inputConnectorIDs":[991],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[996],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS Message Long ID's"}}}},"visible":true},"2":{"slot":2,"name":"Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eu-west-1"}}}},"visible":true},"3":{"slot":3,"name":"Queue Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS_FIFO_LONG_ID_SF.fifo"}}}},"visible":true},"4":{"slot":4,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"This is a Long ID test message being sent to SQS"}}}},"visible":true},"5":{"slot":5,"name":"Message Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Plain"}}}},"visible":true},"6":{"slot":6,"name":"Message Group Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"sg97iJLeF6Tjnb3GsR31dmEVJ1jenz01Z5hMsp4vXks9GUKQD9MdgllSrl9JqSIsLXakKQcNbMxS5TTG9dnevqkK9yKeDBqrs5b1cTt64VpM8jKzShlKwsCW42KQgjPS"}}}},"visible":false},"7":{"slot":7,"name":"Message Deduplication Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"sg97iJLeF6Tjnb3GsR31dmEVJ1jenz01Z5hMsp4vXks9GUKQD9MdgllSrl9JqSIsLXakKQcNbMxS5TTG9dnevqkK9yKeDBqrs5b1cTt64VpM8jKzShlKwsCW42KQgjPS"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"981":{"id":981,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":560,"y":1120,"width":32,"height":32,"inputConnectorIDs":[1028],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Big Message Failure"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"982":{"id":982,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":48,"y":528,"width":32,"height":32,"inputConnectorIDs":[1037],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 1"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"983":{"id":983,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":80,"y":1120,"width":32,"height":32,"inputConnectorIDs":[1029],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 3"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"984":{"id":984,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":64,"y":1440,"width":32,"height":32,"inputConnectorIDs":[1036],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 4"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"985":{"id":985,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-159239741,"x":320,"y":1008,"width":32,"height":32,"inputConnectorIDs":[998],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[999],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS Message Long Message"}}}},"visible":true},"2":{"slot":2,"name":"Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eu-west-1"}}}},"visible":true},"3":{"slot":3,"name":"Queue Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQS_FIFO_BIG_MESSAGE_SF.fifo"}}}},"visible":true},"4":{"slot":4,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"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"}}}},"visible":true},"5":{"slot":5,"name":"Message Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Plain"}}}},"visible":true},"6":{"slot":6,"name":"Message Group Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1"}}}},"visible":false},"7":{"slot":7,"name":"Message Deduplication Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"986":{"id":986,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":384,"y":1328,"width":32,"height":32,"inputConnectorIDs":[996],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1032],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get Long ID Message and Delete"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import time\nimport boto3\n\ntime.sleep (10)\n\nsqs = boto3.resource('sqs')\n\nqueue = sqs.get_queue_by_name(QueueName='SQS_FIFO_LONG_ID_SF.fifo')\n\n#This shall return the queue URL this should be...\nqueue_url = queue.url\n\n#Get the message within the queue - this should only be the message we sent because we delete at the end\nfor message in queue.receive_messages():\n  print(format(message.body))\n  message.delete\n  \n  #Compare expected answer with the message we had returned\n  expected_answer = 'This is a Long ID test message being sent to SQS'\n  if expected_answer==message.body:\n    print ('Deleteing queue...')\n  else:\n    raise Exception(\"Failure: The message does not match with the one we expected\")\n\n#Delete the queue\nclient = boto3.client('sqs')\nclient.delete_queue(QueueUrl=queue_url)\ntime.sleep(30)\nprint('Long Message queue has been deleted successfully!')"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"987":{"id":987,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":335,"y":111,"width":32,"height":32,"inputConnectorIDs":[1026],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1033],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get Plain Messages and Delete"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import time\nimport boto3\n\ntime.sleep (10)\n\nsqs = boto3.resource('sqs')\n\nqueue = sqs.get_queue_by_name(QueueName='SQS_PLAIN_FIFO_SF.fifo')\n\n#This shall return the queue URL this should be...\nqueue_url = queue.url\n\n#Get the message within the queue - this should only be the message we sent because we delete at the end\nfor message in queue.receive_messages():\n  print(format(message.body))\n  message.delete\n  \n  #Compare expected answer with the message we had returned\n  expected_answer = 'This is a plain test message being sent to SQS'\n  if expected_answer==message.body:\n    print ('Deleteing queue...')\n  else:\n    raise Exception(\"Failure: The message does not match with the one we expected\")\n\n#Delete the queue\nclient = boto3.client('sqs')\nclient.delete_queue(QueueUrl=queue_url)\ntime.sleep(30)\nprint('Plain queue has been deleted successfully!')"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"988":{"id":988,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":64,"y":832,"width":32,"height":32,"inputConnectorIDs":[1035],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 2"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"989":{"id":989,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":384,"y":720,"width":32,"height":32,"inputConnectorIDs":[997],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[1030],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get Base64 Messages and Delete"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import time\nimport boto3\n\ntime.sleep (10)\n\nsqs = boto3.resource('sqs')\n\nqueue = sqs.get_queue_by_name(QueueName='SQS_FIFO_BASE_64_SF.fifo')\n\n#This shall return the queue URL this should be...\nqueue_url = queue.url\n\n#Get the message within the queue - this should only be the message we sent because we delete at the end\nfor message in queue.receive_messages():\n  print(format(message.body))\n  message.delete\n  \n  #Compare expected answer with the message we had returned\n  expected_answer = 'VGhpcyBpcyBhIEJhc2U2NCB0ZXN0IG1lc3NhZ2UgYmVpbmcgc2VudCB0byBTUVM='\n  if expected_answer==message.body:\n    print ('Deleteing queue...')\n  else:\n    raise Exception(\"Failure: The message does not match with the one we expected\")\n\n#Delete the queue\nclient = boto3.client('sqs')\nclient.delete_queue(QueueUrl=queue_url)\ntime.sleep(30)\nprint('Base64 queue has been deleted successfully!')"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{},"failureConnectors":{"1028":{"id":1028,"sourceID":979,"targetID":981},"1029":{"id":1029,"sourceID":977,"targetID":983},"1030":{"id":1030,"sourceID":989,"targetID":976},"1031":{"id":1031,"sourceID":968,"targetID":970},"1032":{"id":1032,"sourceID":986,"targetID":973},"1033":{"id":1033,"sourceID":987,"targetID":969},"1034":{"id":1034,"sourceID":966,"targetID":978},"1035":{"id":1035,"sourceID":971,"targetID":988},"1036":{"id":1036,"sourceID":972,"targetID":984},"1037":{"id":1037,"sourceID":967,"targetID":982}},"unconditionalConnectors":{"990":{"id":990,"sourceID":974,"targetID":977},"991":{"id":991,"sourceID":972,"targetID":980},"992":{"id":992,"sourceID":974,"targetID":966},"993":{"id":993,"sourceID":967,"targetID":964},"994":{"id":994,"sourceID":974,"targetID":972},"995":{"id":995,"sourceID":966,"targetID":975},"996":{"id":996,"sourceID":980,"targetID":986},"997":{"id":997,"sourceID":965,"targetID":989},"998":{"id":998,"sourceID":977,"targetID":985},"999":{"id":999,"sourceID":985,"targetID":979},"1000":{"id":1000,"sourceID":964,"targetID":968},"1024":{"id":1024,"sourceID":971,"targetID":965},"1025":{"id":1025,"sourceID":974,"targetID":971},"1026":{"id":1026,"sourceID":975,"targetID":987},"1027":{"id":1027,"sourceID":974,"targetID":967}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"959":{"id":959,"x":-10,"y":582,"width":490,"height":189,"text":"Sends a Base64 message to an SQS queue\n\n**``NOTE``**\n\nIf you want to edit the SQS component you must first run the __Create Base64 SQS Queue__ Python script, this is due to the fact that this queue only exists for as long as this job is running","colour":"00ce4f"},"960":{"id":960,"x":-10,"y":886,"width":647,"height":186,"text":"Sends a Big message to an SQS queue\n\n**``NOTE``**\n\nIf you want to edit the SQS component you must first run the __Create Big Message SQS Queue__ Python script, this is due to the fact that this queue only exists for as long as this job is running. The message box should be able to take 256kb of data being passed into it","colour":"00ce4f"},"961":{"id":961,"x":-12,"y":1175,"width":476,"height":186,"text":"Sends a message to an SQS queue with a long ID values\n\n**``NOTE``**\n\nIf you want to edit the SQS component you must first run the __Create Long ID SQS Queue__ Python script, this is due to the fact that this queue only exists for as long as this job is running. The ID parameters are able to take 128 characters before we refuse to pass them","colour":"00ce4f"},"962":{"id":962,"x":-16,"y":-20,"width":431,"height":194,"text":"Sends a plain message to an SQS queue\n\n**``NOTE``**\n\nIf you want to edit the SQS component you must first run the __Create Plain SQS Queue__ Python script, this is due to the fact that this queue only exists for as long as this job is running","colour":"00ce4f"},"963":{"id":963,"x":-15,"y":279,"width":467,"height":191,"text":"Sends a Gzip message to an SQS queue\n\n**``NOTE``**\n\nIf you want to edit the SQS component you must first run the __Create Gzip SQS Queue__ Python script, this is due to the fact that this queue only exists for as long as this job is running","colour":"00ce4f"}},"variables":{"SQS_expected_output":{"definition":{"name":"SQS_expected_output","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"This is a test message being sent to SQS"},"SQS_python_output":{"definition":{"name":"SQS_python_output","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"queue_name":{"definition":{"name":"queue_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""}},"grids":{}},"info":{"name":"SQS Message - Run Fifo","description":"","type":"ORCHESTRATION","tag":"8170811f-1209-4b0e-b4b4-a13b7635dd0c"}}